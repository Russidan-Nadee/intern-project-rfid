import 'package:flutter/material.dart';
import 'package:lucide_icons/lucide_icons.dart'; // Make sure this is in your pubspec.yaml
import 'package:intl/intl.dart'; // Make sure this is in your pubspec.yaml

class DashboardPage extends StatelessWidget {
  const DashboardPage({super.key});

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    return Scaffold(
      appBar: AppBar(
        title: const Text('Dashboard Overview'), // Changed title for clarity
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // --- üè† Overview (‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°) ---
            Text('üè† Overview (‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°)', style: theme.textTheme.titleLarge),
            const SizedBox(height: 12),
            Wrap(
              spacing: 12,
              runSpacing: 12,
              children: const [
                _SummaryCard(
                  icon: LucideIcons.boxes,
                  label: '‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
                  value: '1,240',
                ),
                _SummaryCard(
                  icon: LucideIcons.badgeCheck,
                  label: '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà',
                  value: '1,100',
                ),
                _SummaryCard(
                  icon: LucideIcons.badgeX,
                  label: '‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
                  value: '140',
                ),
                _SummaryCard(
                  icon: LucideIcons.scanLine,
                  label: 'Scan ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ',
                  value: '57',
                ),
                _SummaryCard(
                  icon: LucideIcons.fileUp,
                  label: 'Export ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (7d)',
                  value: '12',
                ),
                _SummaryCard(
                  icon: LucideIcons.fileX,
                  label: 'Export ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (7d)',
                  value: '2',
                ),
              ],
            ),
            const SizedBox(height: 24),

            // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á Asset ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Pie Chart) - ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô Dashboard
            _DashboardCard(
              title: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á Asset ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
              child: SizedBox(
                height: 200,
                child: Center(
                  // TODO: ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ Widget ‡∏Å‡∏£‡∏≤‡∏ü‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏à‡∏£‡∏¥‡∏á
                  child: Text(
                    'Placeholder: Pie Chart - Asset Status',
                    style: theme.textTheme.bodyLarge,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 32),

            // --- üè≠ Asset Monitoring (‡∏™‡∏£‡∏∏‡∏õ) ---
            Text(
              'üè≠ Asset Monitoring (‡∏™‡∏£‡∏∏‡∏õ)',
              style: theme.textTheme.titleLarge,
            ),
            const SizedBox(height: 12),
            // ‡∏ï‡∏≤‡∏£‡∏≤‡∏á: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Asset ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å Scan (10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£) - ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô Dashboard
            _MockTable(
              title: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Asset ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å Scan (5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)',
              onViewAll: () {
                // TODO: ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ Asset Monitoring ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
                print('Navigate to Asset Monitoring Page');
              },
            ),
            const SizedBox(height: 12),
            // ‡∏Å‡∏£‡∏≤‡∏ü: Scan per day (7 ‡∏ß‡∏±‡∏ô) - ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô Dashboard
            _DashboardCard(
              title: 'Scan per day (7 ‡∏ß‡∏±‡∏ô)',
              child: SizedBox(
                height: 200,
                child: Center(
                  // TODO: ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ Widget ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ó‡πà‡∏á/‡πÄ‡∏™‡πâ‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Scan ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á
                  child: Text(
                    'Placeholder: Graph - Scan per Day',
                    style: theme.textTheme.bodyLarge,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 32),

            // --- üìÑ Export Tracking (‡∏™‡∏£‡∏∏‡∏õ) ---
            Text(
              'üìÑ Export Tracking (‡∏™‡∏£‡∏∏‡∏õ)',
              style: theme.textTheme.titleLarge,
            ),
            const SizedBox(height: 12),
            // ‡∏ï‡∏≤‡∏£‡∏≤‡∏á: Export jobs ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞, ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó, ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå) - ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô Dashboard
            _MockTable(
              title: 'Export jobs ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)',
              onViewAll: () {
                // TODO: ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ Export Tracking ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
                print('Navigate to Export Tracking Page');
              },
            ),
            const SizedBox(height: 12),
            // Pie chart: Export Success vs Failed - ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô Dashboard
            _DashboardCard(
              title: 'Export Success vs Failed',
              child: SizedBox(
                height: 200,
                child: Center(
                  // TODO: ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ Widget ‡∏Å‡∏£‡∏≤‡∏ü‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Export ‡∏à‡∏£‡∏¥‡∏á
                  child: Text(
                    'Placeholder: Pie Chart - Export Success vs Failed',
                    style: theme.textTheme.bodyLarge,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 32),

            // --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÅ‡∏¢‡∏Å‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á) ---

            // /*
            // // --- üßë‚Äçüíº User Activity ---
            // Text('üßë‚Äçüíº User Activity (‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Users/Admin)', style: theme.textTheme.titleLarge),
            // const SizedBox(height: 12),
            // _MockTable(title: 'User Login Log ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', onViewAll: () {}),
            // const SizedBox(height: 12),
            // _DashboardCard(
            //   title: 'User roles distribution',
            //   child: SizedBox(height: 200, child: Center(child: Text('Placeholder: Pie Chart - User Roles'))),
            // ),
            // const SizedBox(height: 12),
            // _DashboardCard(
            //   title: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Login ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô',
            //   child: SizedBox(height: 200, child: Center(child: Text('Placeholder: Bar Chart - Logins per Day'))),
            // ),
            // const SizedBox(height: 12),
            // _MockListCard(
            //   title: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢ Login ‡πÄ‡∏•‡∏¢ / ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ Login ‡πÄ‡∏Å‡∏¥‡∏ô 30 ‡∏ß‡∏±‡∏ô',
            //   items: const ['User A (‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢ Login)', 'User B (‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ Login > 30 ‡∏ß‡∏±‡∏ô)'],
            // ),
            // const SizedBox(height: 32),
            //
            // // --- ‚ö†Ô∏è Status Change Tracking ---
            // Text('‚ö†Ô∏è Status Change Tracking (‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Asset Details/History)', style: theme.textTheme.titleLarge),
            // const SizedBox(height: 12),
            // _MockTable(title: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Asset', onViewAll: () {}),
            // const SizedBox(height: 12),
            // _DashboardCard(
            //   title: 'Top status transitions (e.g., InUse ‚Üí Broken)',
            //   child: SizedBox(height: 200, child: Center(child: Text('Placeholder: Bar Chart - Top Status Transitions'))),
            // ),
            // const SizedBox(height: 12),
            // const _MockFilterSection(title: '‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ / ‡πÄ‡∏ß‡∏•‡∏≤ (Placeholder)'),
            // const SizedBox(height: 32),
            //
            // // --- üõ†Ô∏è System Info (Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô) ---
            // Text('üõ†Ô∏è System Info (‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Settings/Admin Panel)', style: theme.textTheme.titleLarge),
            // const SizedBox(height: 12),
            // _MockTable(title: 'Plant / Location / Unit ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', onViewAll: () {}),
            // const SizedBox(height: 12),
            // _MockListCard(
            //   title: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£: User / Role / Permission',
            //   items: const ['‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', '‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó', '‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå'],
            // ),
            // const SizedBox(height: 12),
            // _MockListCard(
            //   title: '‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Default Export Config / Expiration',
            //   items: const ['‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Default Export', '‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏'],
            // ),
            // */
          ],
        ),
      ),
    );
  }
}

// --- Reusable Widgets (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á _MockTable) ---

class _SummaryCard extends StatelessWidget {
  final IconData icon;
  final String label;
  final String value;

  const _SummaryCard({
    required this.icon,
    required this.label,
    required this.value,
  });

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    return Container(
      width: 160,
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: theme.cardColor,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black12,
            blurRadius: 8,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Icon(icon, size: 28, color: theme.primaryColor),
          const SizedBox(height: 12),
          Text(value, style: theme.textTheme.headlineSmall),
          const SizedBox(height: 4),
          Text(label, style: theme.textTheme.bodyMedium),
        ],
      ),
    );
  }
}

class _DashboardCard extends StatelessWidget {
  final String title;
  final Widget child;

  const _DashboardCard({required this.title, required this.child});

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: theme.cardColor,
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: Colors.grey.shade200),
        boxShadow: [
          BoxShadow(
            color: Colors.black12,
            blurRadius: 4,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(title, style: theme.textTheme.titleMedium),
          const SizedBox(height: 12),
          child,
        ],
      ),
    );
  }
}

class _MockTable extends StatelessWidget {
  final String title;
  final VoidCallback onViewAll; // ‡πÄ‡∏û‡∏¥‡πà‡∏° callback ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"

  const _MockTable({required this.title, required this.onViewAll});

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    return _DashboardCard(
      title: title,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // Simplified mock table rows
          ...List.generate(3, (index) {
            // ‡πÅ‡∏™‡∏î‡∏á 3 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡∏ö‡∏ô Dashboard
            return Padding(
              padding: const EdgeInsets.symmetric(vertical: 8.0),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Text(
                    '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ${index + 1}',
                    style: theme.textTheme.bodyMedium,
                  ),
                  Text(
                    DateFormat('HH:mm').format(
                      DateTime.now().subtract(Duration(minutes: index * 10)),
                    ),
                    style: theme.textTheme.bodySmall,
                  ),
                ],
              ),
            );
          }),
          const SizedBox(height: 8),
          // ‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
          Align(
            alignment: Alignment.centerRight,
            child: TextButton(
              onPressed: onViewAll, // ‡πÉ‡∏ä‡πâ callback ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤
              child: const Text('‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î >'),
            ),
          ),
        ],
      ),
    );
  }
}

// ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á _MockListCard ‡πÅ‡∏•‡∏∞ _MockFilterSection ‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ
// ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ñ‡∏π‡∏Å‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß
/*
class _MockListCard extends StatelessWidget {
  final String title;
  final List<String> items;

  const _MockListCard({
    required this.title,
    required this.items,
  });

  @override
  Widget build(BuildContext context) {
    return _DashboardCard(
      title: title,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: items
            .map(
              (item) => Padding(
                padding: const EdgeInsets.symmetric(vertical: 4.0),
                child: Text('‚Ä¢ $item'),
              ),
            )
            .toList(),
      ),
    );
  }
}

class _MockFilterSection extends StatelessWidget {
  final String title;

  const _MockFilterSection({required this.title});

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    return _DashboardCard(
      title: title,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞, ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤', style: theme.textTheme.bodyMedium),
          const SizedBox(height: 8),
          Container(
            height: 40,
            decoration: BoxDecoration(
              color: Colors.grey[100],
              borderRadius: BorderRadius.circular(8),
              border: Border.all(color: Colors.grey.shade300),
            ),
            child: const Center(child: Text('‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', style: TextStyle(color: Colors.grey))),
          ),
        ],
      ),
    );
  }
}
*/
